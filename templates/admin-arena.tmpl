<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    

    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/static/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="/static/css/material-icons.css">
    <link type="text/css" rel="stylesheet" href="/static/css/game.css">

    <title>Robot Rumble</title>

    <script>
      function post(path, params, method) {
          method = method || "post"; // Set method to post by default if not specified.

          // The rest of this code assumes you are not using a library.
          // It can be made less wordy if you use one.
          var form = document.createElement("form");
          form.setAttribute("method", method);
          form.setAttribute("action", path);

          for(var key in params) {
              if(params.hasOwnProperty(key)) {
                  var hiddenField = document.createElement("input");
                  hiddenField.setAttribute("type", "hidden");
                  hiddenField.setAttribute("name", key);
                  hiddenField.setAttribute("value", params[key]);

                  form.appendChild(hiddenField);
              }
          }

          document.body.appendChild(form);
          form.submit();
}
    </script>
   
  </head>
  <body>
    {{ template "navbar" .}}

    {{ $arena := .arena }}
    {{ $arenaFullName := .arena.Name }}
    {{ $arenaName := .arenaName }}
    {{- $scored := .scored -}}
    {{ $game := .game}}
    {{ $color := index .colors .arena.Id}}

    <div class="container-fluid mt-2">
      <div class="row">
        
        <div class="col-sm-12 col-lg-10">
          <h2 class="text-center pt-2 text-{{$color}} font-weight-bolder display-2">{{.arena.Name}}</h2>
          <hr>
          <div id="arena-current" style="max-height:90vh;">
          <div class="row">
          {{range $i, $team := $game.GetTeams }}
          <div class="col col-lg-{{width $game}} col-md-6 offset-md-0 col-sm-8 offset-sm-2">
          <div class="card bg-{{backgroundColor $game $i}}">
          {{ if $team.Metadata }}<span class="text-center"><img style="border: 1px solid black;width: auto;" src="{{printf "%s" $team.Metadata}}" class="card-img-top "/></span>{{end}}
            <div class="card-body text-center font-weight-bolder lostwinner">
              <h1 class="font-weight-bolder">{{$team.Name}}</h1>
              {{ if $scored}}
              <h2 id="team-{{$i}}-score" class="font-weight-bolder">{{index $game.GetScores $i}}</h2>
              <div>
              <button id="team-{{$i}}-subtract" class="btn btn-outline-danger btn-circle btn-xl"><i class="material-icons">remove</i></button>
              <button id="team-{{$i}}-add" class="btn btn-outline-success btn-circle btn-xl"><i class="material-icons">add</i></button>
              </div>
              {{ else }}
                <div class="form-inline d-flex justify-content-between align-items-center pt-2">
                <label class="mr-sm-2" for="team-{{$i}}-place">Place</label>
                <select class="custom-select custom-select-sm mr-sm-2" style="min-width:70%;" id="team-{{$i}}-place" name="team-{{$i}}-place">
                  <option value=""></option>
                  {{ range $j, $item := slice (len $game.GetTeams) }}
                  {{ $k := add $j 1 }}
                  <option value="{{ $k }}" {{if eq (index $game.GetPlaces $i) $k }}selected{{end}}>{{ $k}}</option>
                  {{ end }}
                </select>
                
                </div>
              {{ end }}
            </div>
          </div>

            
          </div>

          {{ if $scored}}
          <script>      
          
          document.getElementById("team-{{$i}}-subtract").addEventListener("click", function(){
            scoreElement = document.getElementById("team-{{$i}}-score");
          score = parseInt(scoreElement.innerHTML);
            scoreElement.innerHTML = score-1;
            post("/admin/updateScore", {"arena":"{{$arenaName}}", "team": "{{$team.Name}}", "score": -1});
          });
          document.getElementById("team-{{$i}}-add").addEventListener("click", function(){
            scoreElement = document.getElementById("team-{{$i}}-score");
          score = parseInt(scoreElement.innerHTML);
            scoreElement.innerHTML = score+1;
            post("/admin/updateScore", {"arena":"{{$arenaName}}", "team": "{{$team.Name}}", "score": 1});
          });

          </script>
          {{ else }}
          <script>      
          
          document.getElementById("team-{{$i}}-place").addEventListener("change", function(){
            post("/admin/updatePlaces", {"arena":"{{$arenaName}}", "place-{{$i}}": document.getElementById("team-{{$i}}-place").value});
          });
          
          </script>
          {{end}}
        {{ end }}
        
        </div>
        <div class="row mt-5">
        <div class="offset-3 col-6 d-flex justify-content-between align-items-center">
        <button id="startGame" class="btn btn-lg btn-primary">Start Game</button>
        {{if .admin}}
        <button id="submitGame" class="btn btn-lg btn-warning">Submit Game Completion</button>
        {{end}}
        </div>
        </div>
          
          </div>
        </div>
        <div class="col-sm-2 col-md-2 col-lg-2 shadow d-none d-lg-block">
          <div id="arena-upcoming" style="max-height:70vh;">
            <h3 class="text-center">On Deck</h3>
            <div id="arena-next">
              <div class="queue">
                <div class="queue-inner">
                {{ range $i, $game := .queuedGames }}
                  <div class="card border-dark mb-3">
                    <div class="card-header text-center bg-{{$color}}">
                      <a href="/arena/{{$arenaName}}" class="text-dark font-weight-bolder stretched-link">{{$arenaFullName}}</a>
                    </div>
                    
                    <div class="card-body text-dark">
                      <ul class="list-group list-group-flush">
                      {{ range $j, $team := $game.GetTeams }}
                        <li class="list-group-item d-flex justify-content-between align-items-center queued-teams">
                        {{ if $team.GetMetadata }}
                        <img src="{{ printf "%s" $team.GetMetadata }}" class="img-thumbnail">
                        {{ end }}
                        <span>{{ $team.GetName }}</span><span>{{ $game.GetTeamScore $team }}</span>
                        </li>
                        {{ end }}
                      </ul>
                    </div>
                    
                  </div>
                </div>
                {{ end }}
              </div>
            </div>
            <hr>
            <div id="arena-countdown" class="text-center" >
              <h3>Match Time Remaining</h3>
              <h1 id="time-remaining" class="text-red font-weight-bolder display-1"></h1>
            </div>
          </div>
        </div>
        
      </div>
    </div>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="/static/js/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="/static/js/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="/static/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script src="/static/js/react.production.min.js" crossorigin></script>
    <script src="/static/js/react-dom.production.min.js" crossorigin></script>
    <script src="/static/js/arena.js" type="text/javascript"></script>


  <script>
  document.getElementById("startGame").addEventListener("click", function(){
            post("/admin/gameStart", {"arena":"{{$arenaName}}"});
          });
  {{ if $scored}}
  document.getElementById("submitGame").addEventListener("click", function(){
            post("/admin/gameComplete", {"arena":"{{$arenaName}}", "place": ""});
          });
  {{ else }}
  document.getElementById("submitGame").addEventListener("click", function(){
            post("/admin/gameComplete", {"arena":"{{$arenaName}}", "place": [
            {{- range $i, $team := $game.GetTeams -}}
               document.getElementById("team-{{$i}}-place").value, 
            {{- end -}}]
            });
          });
  {{ end }}


  
  </script>

  <script>
if(typeof(EventSource) !== "undefined") {
    var source = new EventSource("/events");
    source.onerror = function(event) {
        console.log("EventSource error", event);
    }; 

    var countDownDate;
    var updateTimer;
    source.addEventListener('{{.arenaName}}-start', function(event) {
    countDownDate = event.data;
    clearInterval(updateTimer);

    // Update the count down every 1 second
    updateTimer = setInterval(function() {

        // Get current date and time
        var now = new Date().getTime();
        
        // Find the distance between now and the count down date
        var distance = countDownDate - now;
        
        
        // Time calculations for minutes and seconds
        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);
        
        document.getElementById("time-remaining").innerHTML = ('0' + minutes).slice(-2) + ":" + ('0' + seconds).slice(-2) ;
        
        // If the count down is over, write Game Over text
        if (distance < 0) {
            clearInterval(updateTimer);
            document.getElementById("time-remaining").innerHTML = "Game Over";
        }
    }, 1000);
    
    }, false);

} else {
    document.getElementById("result").innerHTML = "Sorry, your browser does not support server-sent events...";
}
    </script>
  </body>
</html>