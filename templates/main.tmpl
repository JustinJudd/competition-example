<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/static/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link type="text/css" rel="stylesheet" href="/static/css/game.css">

    <title>Robot Rumble</title>
    <style>


    .queue {
      height: 87vh;	
      overflow: hidden;
      position: relative;
    }
    

    #main-result {
      height: 90vh;	
      overflow: hidden;
      position: relative;
    }
   
     
    </style>
  </head>
  <body>
    {{ template "navbar" }}

    <div class="container-fluid mt-2">
      <div class="row">
        <div class="col col-lg-2 shadow pb-3">
          <h3 class="text-center">Leaderboard</h3><div id="leaderboard-result"></div>
        </div>
        <div class="col col-lg-8">
          <div id="main-result"><h3>Tournament not yet started</h3></div>
        </div>
        <div class="col col-lg-2 shadow">
          <h3 class="text-center">Scheduled Matches</h3><div id="current-result" style="max-height:90vh;"></div>
        </div>
      </div>
    </div>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="/static/js/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="/static/js/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="/static/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>
    <script src="/static/js/react.production.min.js" crossorigin></script>
    <script src="/static/js/react-dom.production.min.js" crossorigin></script>
    <script src="/static/js/arena.js" type="text/javascript"></script>

    <script>
    if(typeof(EventSource) !== "undefined") {
        var source = new EventSource("/events");
        source.onmessage = function(event) {
            document.getElementById("main-result").innerHTML = event.data + "<br>";
        };
      source.addEventListener('main', function(event) {
        e = document.getElementById("main-result");
          e.innerHTML = "<div id=\"main-inner\">" + event.data + "</div>";
          
          e2 = document.getElementById("main-inner");
          e2.style.transform = "translateY(0%);";
          if (e.scrollHeight > e.clientHeight) {
            e2.style.webkitAnimationPlayState = "running";
            e2.style.transform = "translateY(100%);";
            e2.style.transform += "rotateZ(360deg);";
            e2.animate([
              // keyframes
              { transform: 'translateY('+ e.clientHeight+'px)' }, 
              { transform: 'translateY(-100%)' }
            ], { 
              // timing options
              duration: 25000,
              iterations: Infinity
            });
          } 
          
      }, false);
      source.addEventListener('leaderboard', function(event) {
        var data=JSON.parse(event.data);
        e = document.getElementById("leaderboard-result")
        CreateLeaderboard(data, e);
      }, false);
        source.addEventListener('current', function(event) {
          var data=JSON.parse(event.data);
          console.log(data);

          e = document.getElementById("current-result");

          function cb(instance) {
            console.log("Callback called for", instance);
          }
          e2 = document.getElementsByClassName("queue-inner")[0];
          oldLength = 0;
          if (typeof e2 !== 'undefined') {
            oldLength = e2.children.length;
          } 
          CreateGameQueue(data, e, cb); 
          
          e2 = document.getElementsByClassName("queue-inner")[0];

          e2.style.transform = "translateY(0%);";
          e2.style.transform += "rotateZ(360deg);";
          function cancelAnimation(animation) {
            animation.cancel();
          }
          function adjustAnimation(durationSpeed) {
            if (e2.clientHeight > e.clientHeight) {
              e2.style.webkitAnimationPlayState = "running";
              e2.style.transform = "translateY(100%);";
              if (typeof animation !== 'undefined') {
                cancelAnimation(animation)
              }
              
              animation = e2.animate([
                // keyframes
                { transform: 'translateY('+ e.clientHeight+'px)' }, 
                { transform: 'translateY(-100%)' }
              ], { 
                // timing options
                duration: durationSpeed,
                iterations: Infinity
              });
            } else {
              if (typeof animation !== 'undefined') {
                cancelAnimation(animation)
              }
              e2.style.webkitAnimationPlayState = "paused";
            }

          }
          if (e2.children.length != oldLength)  {
            adjustAnimation(20000);
          } 
          
      }, false);

    } else {
        document.getElementById("result").innerHTML = "Sorry, your browser does not support server-sent events...";
    }
    </script>
  </body>
</html>